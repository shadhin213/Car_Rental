@{
    ViewData["Title"] = "Available Cars";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header bg-primary text-white p-4 rounded mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="display-4">
                            <i class="bi bi-car-front"></i> Fleet Overview
                        </h1>
                        <p class="lead">Browse our complete fleet of vehicles with their current status</p>
                    </div>
                    <div>
                        <a href="@Url.Action("FleetManagement", "Home")" class="btn btn-outline-light btn-lg">
                            <i class="bi bi-truck"></i> Fleet Management
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="bi bi-funnel"></i> Filter Cars</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="vehicleType" class="form-label">Vehicle Type</label>
                            <select class="form-select" id="vehicleType">
                                <option value="">All Types</option>
                                <option value="motor-bike">Motor Bike</option>
                                <option value="cng">CNG</option>
                                <option value="private-car">Private Car</option>
                                <option value="pickup">Pickup</option>
                                <option value="truck">Truck</option>
                                <option value="covered-van">Covered Van</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="priceRange" class="form-label">Price Range</label>
                            <select class="form-select" id="priceRange">
                                <option value="">All Prices</option>
                                <option value="0-50">$0 - $50/day</option>
                                <option value="50-100">$50 - $100/day</option>
                                <option value="100-200">$100 - $200/day</option>
                                <option value="200+">$200+/day</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="transmission" class="form-label">Transmission</label>
                            <select class="form-select" id="transmission">
                                <option value="">All</option>
                                <option value="automatic">Automatic</option>
                                <option value="manual">Manual</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="fuelType" class="form-label">Fuel Type</label>
                            <select class="form-select" id="fuelType">
                                <option value="">All</option>
                                <option value="petrol">Petrol</option>
                                <option value="diesel">Diesel</option>
                                <option value="electric">Electric</option>
                                <option value="hybrid">Hybrid</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="statusFilter" class="form-label">Status</label>
                            <select class="form-select" id="statusFilter">
                                <option value="">All Status</option>
                                <option value="available">Available</option>
                                <option value="rented">Rented</option>
                                <option value="maintenance">Under Maintenance</option>
                                <option value="out-of-service">Out of Service</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cars Grid -->
    <div class="row" id="carsGrid">
        @{
            var vehicles = ViewBag.Vehicles as List<CarRentalManagementSystem.Models.VehicleViewModel> ?? new List<CarRentalManagementSystem.Models.VehicleViewModel>();
        }
        
        @if (vehicles.Any())
        {
            @foreach (var vehicle in vehicles)
            {
                <div class="col-lg-4 col-md-6 mb-4 vehicle-item" 
                     data-vehicle-type="@vehicle.VehicleType.ToLower().Replace(" ", "-")"
                     data-price="@vehicle.DailyRate"
                     data-fuel="@vehicle.FuelType.ToLower()">
                    <div class="card h-100 shadow-sm">
                        <div class="card-img-top bg-light text-center p-4 position-relative">
                            @if (!string.IsNullOrEmpty(vehicle.ImageUrl))
                            {
                                <img src="@vehicle.ImageUrl" alt="@vehicle.Model" class="img-fluid" style="max-height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                @switch (vehicle.VehicleType.ToLower())
                                {
                                    case "motor bike":
                                        <i class="bi bi-bicycle" style="font-size: 4rem; color: #6f42c1;"></i>
                                        break;
                                    case "cng":
                                        <i class="bi bi-fuel-pump" style="font-size: 4rem; color: #28a745;"></i>
                                        break;
                                    case "private car":
                                        <i class="bi bi-car-front" style="font-size: 4rem; color: #007bff;"></i>
                                        break;
                                    case "pickup":
                                        <i class="bi bi-truck" style="font-size: 4rem; color: #ffc107;"></i>
                                        break;
                                    case "truck":
                                        <i class="bi bi-truck" style="font-size: 4rem; color: #fd7e14;"></i>
                                        break;
                                    case "covered van":
                                        <i class="bi bi-van" style="font-size: 4rem; color: #dc3545;"></i>
                                        break;
                                    default:
                                        <i class="bi bi-car-front" style="font-size: 4rem; color: #6c757d;"></i>
                                        break;
                                }
                            }
                            <span class="badge @(vehicle.Status?.ToLower() switch { 
                                "available" => "bg-success", 
                                "rented" => "bg-warning", 
                                "maintenance" => "bg-info", 
                                "out-of-service" => "bg-danger",
                                _ => "bg-secondary"
                            }) status-badge position-absolute top-0 end-0 m-2">
                                @vehicle.Status
                            </span>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@vehicle.Model</h5>
                            <p class="card-text text-muted">
                                @vehicle.VehicleType • @vehicle.Year • @vehicle.FuelType
                                @if (vehicle.Seats > 0)
                                {
                                    <span>• @vehicle.Seats Seats</span>
                                }
                            </p>
                            <div class="mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-gear"></i> @vehicle.EngineCapacity • 
                                    <i class="bi bi-palette"></i> @vehicle.Color
                                </small>
                            </div>
                            @if (!string.IsNullOrEmpty(vehicle.Description))
                            {
                                <p class="card-text small">@vehicle.Description</p>
                            }
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-primary fw-bold">$@vehicle.DailyRate/day</span>
                                <small class="text-muted">Reg: @vehicle.RegistrationNumber</small>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent">
                            @if (vehicle.Status?.ToLower() == "available")
                            {
                                <button class="btn btn-primary w-100">
                                    <i class="bi bi-calendar-plus"></i> Rent Now
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-secondary w-100" disabled>
                                    <i class="bi bi-clock"></i> @(vehicle.Status?.ToLower() == "rented" ? "Currently Rented" : 
                                                                   vehicle.Status?.ToLower() == "maintenance" ? "Under Maintenance" : 
                                                                   vehicle.Status?.ToLower() == "out-of-service" ? "Out of Service" : "Unavailable")
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> No vehicles available at the moment. Please check back later.
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="row">
        <div class="col-12">
            <nav aria-label="Cars pagination">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .status-badge {
            font-size: 0.8rem;
            font-weight: 600;
            padding: 0.5rem 0.75rem;
        }
        
        .card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        

        
        .vehicle-item[style*="none"] {
            display: none !important;
        }
    </style>
}

@section Scripts {
    <script>
        // Add filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const filterSelects = document.querySelectorAll('select');
            const vehicleItems = document.querySelectorAll('.vehicle-item');
            
            function filterVehicles() {
                const vehicleType = document.getElementById('vehicleType').value;
                const priceRange = document.getElementById('priceRange').value;
                const fuelType = document.getElementById('fuelType').value;
                const statusFilter = document.getElementById('statusFilter').value;
                
                vehicleItems.forEach(item => {
                    let show = true;
                    
                    // Filter by vehicle type
                    if (vehicleType && item.dataset.vehicleType !== vehicleType) {
                        show = false;
                    }
                    
                    // Filter by price range
                    if (priceRange) {
                        const price = parseFloat(item.dataset.price);
                        switch (priceRange) {
                            case '0-50':
                                if (price > 50) show = false;
                                break;
                            case '50-100':
                                if (price < 50 || price > 100) show = false;
                                break;
                            case '100-200':
                                if (price < 100 || price > 200) show = false;
                                break;
                            case '200+':
                                if (price < 200) show = false;
                                break;
                        }
                    }
                    
                    // Filter by fuel type
                    if (fuelType && item.dataset.fuel !== fuelType) {
                        show = false;
                    }
                    
                    // Filter by status
                    if (statusFilter) {
                        const status = item.querySelector('.status-badge').textContent.trim().toLowerCase();
                        if (status !== statusFilter.toLowerCase()) {
                            show = false;
                        }
                    }
                    
                    // Show/hide item
                    item.style.display = show ? 'block' : 'none';
                });
                
                // Update count
                const visibleCount = document.querySelectorAll('.vehicle-item[style*="block"], .vehicle-item:not([style*="none"])').length;
                console.log(`Showing ${visibleCount} vehicles`);
            }
            
            filterSelects.forEach(select => {
                select.addEventListener('change', filterVehicles);
            });
            
            // Initial filter
            filterVehicles();
        });
    </script>
} 